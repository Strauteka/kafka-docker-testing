version: "3"
services:
  zoo1:
    image: zookeeper:3.4.9
    restart: on-failure:3
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    volumes:
      - ./zk-multiple-kafka-multiple/zoo1/data:/data
      - ./zk-multiple-kafka-multiple/zoo1/datalog:/datalog

  zoo2:
    image: zookeeper:3.4.9
    restart: on-failure:3
    hostname: zoo2
    ports:
      - "2182:2182"
    environment:
      ZOO_MY_ID: 2
      ZOO_PORT: 2182
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    volumes:
      - ./zk-multiple-kafka-multiple/zoo2/data:/data
      - ./zk-multiple-kafka-multiple/zoo2/datalog:/datalog

  zoo3:
    image: zookeeper:3.4.9
    restart: on-failure:3
    hostname: zoo3
    ports:
      - "2183:2183"
    environment:
      ZOO_MY_ID: 3
      ZOO_PORT: 2183
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    volumes:
      - ./zk-multiple-kafka-multiple/zoo3/data:/data
      - ./zk-multiple-kafka-multiple/zoo3/datalog:/datalog
  kafka1:
    image: wurstmeister/kafka:2.13-2.7.0
    restart: on-failure:5
    #hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: "INTERNAL://kafka1:19091,EXTERNAL://:9091"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka1:19091,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091"

      #KAFKA_CREATE_TOPICS: "test:3:3,topic2:2:2" ~ waiting for kafka to be ready...

      KAFKA_ADVERTISED_HOST_NAME: ${VAR_EXTERNAL_IP}
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: ${VAR_AUTO_LEADER_REBALANCE_ENABLE}
      KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: ${VAR_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${VAR_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${VAR_INTER_BROKER_LISTENER_NAME}
      KAFKA_DEFAULT_REPLICATION_FACTOR: ${VAR_DEFAULT_REPLICATION_FACTOR}
      KAFKA_MIN_INSYNC_REPLICAS: ${VAR_MIN_INSYNC_REPLICAS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${VAR_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: ${VAR_OFFSETS_TOPIC_NUM_PARTITIONS}
      KAFKA_NUM_PARTITIONS: ${VAR_NUM_PARTITIONS}
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      #LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: "DEBUG"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./zk-multiple-kafka-multiple/kafka1/data:/var/lib/kafka/data
    depends_on:
      - "zoo1"
      - "zoo2"
      - "zoo3"
  kafka2:
    image: wurstmeister/kafka:2.13-2.7.0
    restart: on-failure:5
    hostname: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: "INTERNAL://kafka2:19092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka2:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092"

      KAFKA_ADVERTISED_HOST_NAME: ${VAR_EXTERNAL_IP}
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: ${VAR_AUTO_LEADER_REBALANCE_ENABLE}
      KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: ${VAR_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${VAR_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${VAR_INTER_BROKER_LISTENER_NAME}
      KAFKA_DEFAULT_REPLICATION_FACTOR: ${VAR_DEFAULT_REPLICATION_FACTOR}
      KAFKA_MIN_INSYNC_REPLICAS: ${VAR_MIN_INSYNC_REPLICAS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${VAR_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: ${VAR_OFFSETS_TOPIC_NUM_PARTITIONS}
      KAFKA_NUM_PARTITIONS: ${VAR_NUM_PARTITIONS}
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      #LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: "DEBUG"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./zk-multiple-kafka-multiple/kafka2/data:/var/lib/kafka/data
    depends_on:
      - "zoo1"
      - "zoo2"
      - "zoo3"
  kafka3:
    image: wurstmeister/kafka:2.13-2.7.0
    restart: on-failure:5 #unless-stopped
    hostname: kafka3
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: "INTERNAL://kafka3:19093,EXTERNAL://:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka3:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093"

      KAFKA_ADVERTISED_HOST_NAME: ${VAR_EXTERNAL_IP}
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: ${VAR_AUTO_LEADER_REBALANCE_ENABLE}
      KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: ${VAR_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${VAR_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${VAR_INTER_BROKER_LISTENER_NAME}
      KAFKA_DEFAULT_REPLICATION_FACTOR: ${VAR_DEFAULT_REPLICATION_FACTOR}
      KAFKA_MIN_INSYNC_REPLICAS: ${VAR_MIN_INSYNC_REPLICAS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${VAR_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: ${VAR_OFFSETS_TOPIC_NUM_PARTITIONS}
      KAFKA_NUM_PARTITIONS: ${VAR_NUM_PARTITIONS}
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      #LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: "DEBUG"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./zk-multiple-kafka-multiple/kafka3/data:/var/lib/kafka/data
    depends_on:
      - "zoo1"
      - "zoo2"
      - "zoo3"
